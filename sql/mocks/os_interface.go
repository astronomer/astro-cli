// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	fs "io/fs"

	mock "github.com/stretchr/testify/mock"
)

// OsBind is an autogenerated mock type for the OsBind type
type OsBind struct {
	mock.Mock
}

// WriteFile provides a mock function with given fields: name, data, perm
func (_m *OsBind) WriteFile(name string, data []byte, perm fs.FileMode) error {
	ret := _m.Called(name, data, perm)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, []byte, fs.FileMode) error); ok {
		r0 = rf(name, data, perm)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewOsBind interface {
	mock.TestingT
	Cleanup(func())
}

// NewOsBind creates a new instance of OsBind. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewOsBind(t mockConstructorTestingTNewOsBind) *OsBind {
	mock := &OsBind{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
