workspace:
  base: /go
  path: src/github.com/astronomer/astro-cli

pipeline:
  # Build binary
  build:
    image: golang
    commands:
      - make build

  postgres:
    image: postgres:9.6.15
    name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    detach: true
    when:
      event: push

  prisma:
    image: prismagraphql/prisma:1.34.8
    name: prisma
    environment:
      PRISMA_CONFIG: |
        port: 4466
        databases:
          default:
            connector: postgres
            uri: "postgres://postgres:postgres@postgres:5432/postgres"
            migrations: true
            rawAccess: true
    detach: true
    when:
      event: push

  # start houston
  houston:
    image: astronomerinc/ap-houston-api:dev
    name: houston
    environment:
      NODE_ENV: "development"
      WEBSERVER__PORT: "8871"
      PRISMA__ENDPOINT: "http://prisma:4466/houston"
      PRISMA__DEBUG: "false"
      ORBIT__PORT: "8080"
      DATABASE__CONNECTION: "postgres://postgres:postgres@postgres:5432/postgres"
      PUBLIC_SIGNUPS: "true"
      EMAIL_CONFIRMATION: "false"
      EMAIL__ENABLED: "false"
      JWT__PASSPHRASE: "secretpassword"
      DEPLOYMENTS__DATABASE__CONNECTION: "postgres://postgres:postgres@postgres:5432/postgres"
      DEPLOYMENTS__DATABASE__ENABLED: "true"
      DEPLOYMENTS__LOG_HELM_VALUES: "true"
      HELM__RELEASE_VERSION: "0.7.5"
    detach: true
    when:
      event: push

  # wait for DB to come online
  wait-for-db:
    image: astronomerio/ap-build:0.1.1
    commands:
      - while ! nc -w 1 -z postgres 5432; do sleep 1; done
      - while ! nc -w 1 -z prisma 4466; do sleep 1; done
      - while ! nc -w 1 -z houston 8871; do sleep 1; done
    when:
      event: push

  # Test the code
  test:
    image: asoldatenko/dnd-golang:19.03
    secrets: [ codecov_token ]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - CGO_ENABLE=0
      - HOUSTON_HOST=houston
    commands:
      - make test
      - bash -c "bash <(curl -s https://codecov.io/bash)"
    when:
      event: push

  notify:
    image: plugins/slack
    secrets: [ slack_webhook ]
    channel: platform
    when:
      status: [ failure ]
