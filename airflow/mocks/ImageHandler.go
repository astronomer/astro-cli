// Code generated by mockery v2.10.0. DO NOT EDIT.

package mocks

import (
	types "github.com/astronomer/astro-cli/airflow/types"
	mock "github.com/stretchr/testify/mock"
)

// ImageHandler is an autogenerated mock type for the ImageHandler type
type ImageHandler struct {
	mock.Mock
}

// Build provides a mock function with given fields: config
func (_m *ImageHandler) Build(config types.ImageBuildConfig) error {
	ret := _m.Called(config)

	var r0 error
	if rf, ok := ret.Get(0).(func(types.ImageBuildConfig) error); ok {
		r0 = rf(config)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetImageLabels provides a mock function with given fields:
func (_m *ImageHandler) GetImageLabels() (map[string]string, error) {
	ret := _m.Called()

	var r0 map[string]string
	if rf, ok := ret.Get(0).(func() map[string]string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]string)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Push provides a mock function with given fields: serverAddress, token, remoteImage
func (_m *ImageHandler) Push(serverAddress string, token string, remoteImage string) error {
	ret := _m.Called(serverAddress, token, remoteImage)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string, string) error); ok {
		r0 = rf(serverAddress, token, remoteImage)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
