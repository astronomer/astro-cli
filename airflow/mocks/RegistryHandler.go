// Code generated by mockery v2.32.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// RegistryHandler is an autogenerated mock type for the RegistryHandler type
type RegistryHandler struct {
	mock.Mock
}

// Login provides a mock function with given fields: username, token
func (_m *RegistryHandler) Login(username string, token string) error {
	ret := _m.Called(username, token)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string) error); ok {
		r0 = rf(username, token)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewRegistryHandler creates a new instance of RegistryHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewRegistryHandler(t interface {
	mock.TestingT
	Cleanup(func())
}) *RegistryHandler {
	mock := &RegistryHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
